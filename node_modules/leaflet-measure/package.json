{
  "_args": [
    [
      {
        "raw": "https://github.com/UMN-LATIS/leaflet-measure/tarball/master",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "https://github.com/UMN-LATIS/leaflet-measure/tarball/master",
        "spec": "https://github.com/UMN-LATIS/leaflet-measure/tarball/master",
        "type": "remote"
      },
      "C:\\Users\\Anthropology\\Desktop\\UMNMedicalSchool"
    ]
  ],
  "_from": "https://github.com/UMN-LATIS/leaflet-measure/tarball/master",
  "_id": "leaflet-measure@2.0.5",
  "_inCache": true,
  "_location": "/leaflet-measure",
  "_phantomChildren": {},
  "_requested": {
    "raw": "https://github.com/UMN-LATIS/leaflet-measure/tarball/master",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "https://github.com/UMN-LATIS/leaflet-measure/tarball/master",
    "spec": "https://github.com/UMN-LATIS/leaflet-measure/tarball/master",
    "type": "remote"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://github.com/UMN-LATIS/leaflet-measure/tarball/master",
  "_shasum": "f0b13b99771fb48aecf224704613b2152ddfe0cb",
  "_shrinkwrap": null,
  "_spec": "https://github.com/UMN-LATIS/leaflet-measure/tarball/master",
  "_where": "C:\\Users\\Anthropology\\Desktop\\UMNMedicalSchool",
  "author": {
    "name": "Brandon Copeland",
    "email": "br@ndoncopeland.com"
  },
  "browserify": {
    "transform": [
      "brfs"
    ]
  },
  "browserify-shim": {
    "leaflet": "global:L"
  },
  "bugs": {
    "url": "https://github.com/ljagis/leaflet-measure/issues"
  },
  "dependencies": {
    "brfs": "^1.4.3",
    "color": "^0.8.0",
    "geocrunch": "^0.1.1",
    "humanize": "0.0.9",
    "i18n-2": "^0.6.3",
    "leaflet": "^0.7.3",
    "underscore": "^1.7.0"
  },
  "description": "Coordinate, linear, and area measure tool for Leaflet maps",
  "devDependencies": {
    "browserify": "^10.0.0",
    "browserify-shim": "^3.8.12",
    "grunt": "^0.4.5",
    "grunt-browserify": "^3.3.0",
    "grunt-contrib-clean": "^0.6.0",
    "grunt-contrib-jshint": "^0.11.0",
    "grunt-contrib-sass": "^0.9.2",
    "grunt-contrib-uglify": "^0.7.0",
    "grunt-jscs": "^1.2.0",
    "grunt-release": "^0.11.0",
    "svg2png": "^1.1.0"
  },
  "homepage": "https://github.com/ljagis/leaflet-measure#readme",
  "keywords": [
    "leaflet",
    "measure",
    "measurement",
    "control",
    "coordinate",
    "line",
    "length",
    "area",
    "polygon",
    "path"
  ],
  "license": "MIT",
  "main": "src/leaflet-measure.js",
  "name": "leaflet-measure",
  "optionalDependencies": {},
  "readme": "# leaflet-measure\n\nCoordinate, linear, and area measure control for [Leaflet](http://leafletjs.com) maps. Extends [L.Control](http://leafletjs.com/reference.html#control).\n\n<hr>\n\n## [Demo](http://ljagis.github.io/leaflet-measure)\n\n[![Demo](https://raw.githubusercontent.com/ljagis/leaflet-measure/master/example/leaflet-measure-demo.jpg)](http://ljagis.github.io/leaflet-measure)\n\n<hr>\n\n## Install Options\n\n- Clone.. `git clone https://github.com/ljagis/leaflet-measure.git`\n\n- Install with [Bower](http://bower.io/).. `bower install leaflet-measure`\n\n- Install with [npm](https://www.npmjs.com/).. `npm install leaflet-measure`\n\n## Use bundled `leaflet-measure.min.js` or `leaflet-measure.js`\n\nInclude the [Leaflet Source](http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js), `leaflet-measure.min.js`, and associated CSS stylesheets in your HTML page\n\n```html\n<!doctype HTML>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <link rel=\"stylesheet\" href=\"http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css\">\n  <link rel=\"stylesheet\" href=\"leaflet-measure.css\">\n</head>\n<body>\n  <script src=\"http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js\"></script>\n  <script src=\"leaflet-measure.min.js\"></script>\n  <script>\n    // Start creating maps\n  </script>\n</body>\n</html>\n```\n\n## Use with [npm](https://www.npmjs.com/)\n\n```javascript\nvar L = require('leaflet');\nrequire('leaflet-measure');\n\n// Start creating maps\n```\n\n<hr>\n\n## Add control to a Leaflet map\n\n`leaflet-measure` adds `L.Control.Measure`. This control may be used with the standard Leaflet control workflows [described in the Leaflet docs](http://leafletjs.com/reference.html#control).\n\nThe measure control can be instantiated directly and added to a map:\n```javascript\nvar myMap = L.map('mapElementId', options);\nvar measureControl = new L.Control.Measure(options);\nmeasureControl.addTo(myMap);\n```\n\nor instantiated via the factory:\n```javascript\nvar myMap = L.map('mapElementId', options);\nvar measureControl = L.control.measure(options);\nmeasureControl.addTo(myMap);\n```\n\nor added to a map using map options:\n```javascript\nvar myMap = L.map('mapElementId', {\n  measureControl: true\n});\n```\n\n<hr>\n\n## Control options\n\n### position\n\n`{ position: 'topright' }`\n\nStandard Leaflet control [position options](http://leafletjs.com/reference.html#control-positions)\n\n### primaryLengthUnit | secondaryLengthUnit\n\n`{ primaryLengthUnit: 'feet', secondaryLengthUnit: 'miles' }`\n\nUnits used to display length results. `secondaryLengthUnit` is optional.\n\nValid values are `feet`, `meters`, `miles`, and `kilometers`\n\n### primaryAreaUnit | secondaryAreaUnit\n\n`{ primaryAreaUnit: 'acres', secondaryAreaUnit: undefined }`\n\nUnits used to display area results. `secondaryAreaUnit` is optional.\n\nValid values are `acres`, `hectares`, `sqfeet`, `sqmeters`, and `sqmiles`\n\n### activeColor\n\n`{ activeColor: '#ABE67E' }`\n\nBase color to use for map features rendered while actively performing a measurement. Value should be a color represented as a hexadecimal string.\n\n### completedColor\n\n`{ completedColor: '#C8F2BE' }`\n\nBase color to use for features generated from a completed measurement. Value should be a color represented as a hexadecimal string.\n\n### popupOptions\n\n`popupOptions: { className: 'leaflet-measure-resultpopup', autoPanPadding: [10, 10] }`\n\nOptions applied to the popup of the resulting measure feature. Properties may be any standard Leaflet [popup options](http://leafletjs.com/reference.html#popup-options).\n\n### units\n\nCustom units to make available to the measurement calculator. Packaged units are `feet`, `meters`, `miles`, and `kilometers` for length and `acres`, `hectares`, `sqfeet`, `sqmeters`, and `sqmiles` for areas. Additional unit definitions can be added to the packaged units using this option.\n\nDefine units as\n\n```javascript\n{\n  someNewUnit: {\n    factor: 0.001, // Required. Factor to apply when converting to this unit. Length in meters or area in sq meters will be multiplied by this factor.\n    display: 'My New Unit', // Required. How to display in results, like.. \"300 Meters (0.3 My New Unit)\".\n    decimals: 2 // Number of decimals to round results when using this unit. `0` is the default value if not specified.\n  },\n  myOtherNewUnit: {\n    factor: 1234,\n    display: 'My Other Unit',\n    decimals: 0\n  }\n}\n```\n\n```javascript\n//example using elevator pixel conversion:\nvar measureControl = new L.Control.Measure(\n\t{\n\t\tunits: {\n\t\t\tm: {\n\t\t\t\tfactor: layer.conversionFactor / 1000, //calculateConversionFactor() returns a conversion ratio in terms of  millimeters\n\t\t\t\tdisplay: 'meters',\n\t\t\t\tdecimals: 2\n\t\t\t},\n\t\t\tcm: {\n\t\t\t\tfactor: layer.conversionFactor / 10,\n\t\t\t\tdisplay: 'centimeters',\n\t\t\t\tdecimals: 2\n\t\t\t},\n\t\t\tsqm: {\n\t\t\t\tfactor: layer.conversionFactor / 5000000,\n\t\t\t\tdisplay: 'square meters',\n\t\t\t\tdecimals: 2\n\t\t\t},\n\t\t\tsqcm: {\n\t\t\t\tfactor: layer.conversionFactor / 50000,\n\t\t\t\tdisplay: 'square centimeters',\n\t\t\t\tdecimals: 2\n\t\t\t}\n\t\t},\n\t\tprimaryLengthUnit: 'cm',\n\t\tsecondaryLengthUnit: 'm',\n\t\tprimaryAreaUnit: 'sqcm',\n\t\tsecondaryAreaUnit: 'sqm'\n\t}\n)\n```\n\n### captureZIndex\n\n`{ captureZIndex: 10000 }`\n\nZ-index of the marker used to capture measure clicks. Set this value higher than the z-index of all other map layers to disable click events on other layers while a measurement is active.\n\n### localization\n\n`{ localization: 'en' }`\n\nLocale to translate displayed text.\n\nAvailable locales include `en` (default), `es`, `fr`, `it`, `nl`, and `ru`.\n\n### decPoint | thousandsSep\n\n`{ decPoint: '.', thousandsSep: ',' }`\n\nDecimal point and thousands separator used when displaying measurements. If not specified, values are defined by the localization.\n\n<hr>\n\n## Events\n\nYou can subscribe to the following events on the [Map](http://leafletjs.com/reference.html#map-class) using [these methods](http://leafletjs.com/reference.html#events)\n\n### measurestart\n\nFired when measurement starts\n\n### measurefinish\n\nFired when measurement finishes with results of the measurement. Results data includes:\n\n- `area`: Area of a polygon measurement in sq meters. 0 for measurements with less than 3 points.\n\n- `areaDisplay`: Area formatted as displayed in the popup.\n\n- `lastCoord`: Last point clicked in both decimal degrees and degress/min/seconds.\n\n- `length`: Length of the measurement in meters. 0 for measurements with less than 2 points.\n\n- `lengthDisplay`: Length formatted as displayed in the popup.\n\n- `pointCount`: Number of points directly added by the user.\n\n- `points`: Array of points as [`LatLng`](http://leafletjs.com/reference.html#latlng) used to calculate the measurement. Number of items in the array may differ from `pointCoint` because an additional point is added to close polygons during polygon measurements.\n\n<hr>\n\n## Customizing map feature styles\n\nMap features may be styled using CSS SVG style attributes. Features generated from `leaflet-measure` measurements are given the following class names:\n\n- **layer-measurearea**: Feature displaying area of an active measurement\n\n- **layer-measureboundary**: Feature displaying the linear path of an active measurement\n\n- **layer-measurevertex**: Feature added at each vertex (measurement click) of an active measurement\n\n- **layer-measuredrag**: Symbol following cursor while moving during an active measurement\n\n- **layer-measure-resultarea**: Feature added to the map as a permanent layer resulting from an area (3+ points) measurement\n\n- **layer-measure-resultline**: Feature added to the map as a permanent layer resulting from a linear (2 point) measurement\n\n- **layer-measure-resultpoint**: Featured added to the map as a permanent layer resulting from a point (single click) measurement\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/ljagis/leaflet-measure.git"
  },
  "scripts": {
    "build": "grunt build",
    "test": "grunt test"
  },
  "version": "2.0.5"
}
